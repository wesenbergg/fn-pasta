---
/**
 * A button that copies code to the clipboard
 */
interface Props {
  code: string;
}

const { code } = Astro.props;
---

<button
  class="copy-button group relative"
  data-code={code}
  aria-label="Copy code to clipboard"
>
  <span class="copy-icon">
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="18"
      height="18"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      stroke-width="2"
      stroke-linecap="round"
      stroke-linejoin="round"
      class="block"
    >
      <rect x="9" y="9" width="13" height="13" rx="2" ry="2"></rect>
      <path d="M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1"></path>
    </svg>
  </span>
  <span class="success-icon hidden">
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="18"
      height="18"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      stroke-width="2"
      stroke-linecap="round"
      stroke-linejoin="round"
      class="block text-green-500"
    >
      <polyline points="20 6 9 17 4 12"></polyline>
    </svg>
  </span>
</button>

<script>
  document.addEventListener("astro:page-load", () => {
    const copyButtons = document.querySelectorAll(".copy-button");

    copyButtons.forEach((button) => {
      button.addEventListener("click", async () => {
        const code = button.getAttribute("data-code") || "";

        try {
          await navigator.clipboard.writeText(code);

          // Show success state
          const copyIcon = button.querySelector(".copy-icon");
          const successIcon = button.querySelector(".success-icon");

          if (copyIcon) copyIcon.classList.add("hidden");
          if (successIcon) successIcon.classList.remove("hidden");

          // Reset after 2 seconds
          setTimeout(() => {
            if (copyIcon) copyIcon.classList.remove("hidden");
            if (successIcon) successIcon.classList.add("hidden");
          }, 2000);
        } catch (err) {
          console.error("Failed to copy code:", err);
        }
      });
    });
  });
</script>

<style>
  .copy-button {
    position: absolute;
    top: 0.5rem;
    right: 0.5rem;
    z-index: 10;
    display: flex;
    align-items: center;
    padding: 0.35rem;
    border-radius: 0.25rem;
    color: var(--sl-color-gray-4);
    background: var(--sl-color-gray-6);
    opacity: 0;
    transition:
      opacity 0.1s ease,
      background-color 0.1s ease,
      color 0.1s ease;
  }

  .copy-button:hover,
  .copy-button:focus {
    background: var(--sl-color-gray-5);
    color: var(--sl-color-white);
  }

  :global(pre:hover) .copy-button,
  :global(pre:focus-within) .copy-button,
  .copy-button:focus {
    opacity: 1;
  }

  .hidden {
    display: none;
  }
</style>

